import { mountAdminPortalSSO, mountAdminPortalOrgSettings, mountAdminPortalMemberManagement } from '@stytch/vanilla-js/b2b/adminPortal';
export { AdminPortalB2BProducts } from '@stytch/vanilla-js/b2b/adminPortal';
import React, { useRef, useLayoutEffect } from 'react';
import { u as useIsMounted__INTERNAL, a as useStytchB2BClient } from '../StytchB2BContext-8acafb28.js';
import { i as invariant, n as noProviderError } from '../invariant-568a7633.js';

const makeAdminPortalComponent = (mountFn, componentName) => {
    const Component = (props) => {
        invariant(useIsMounted__INTERNAL(), noProviderError(`<${componentName} />`));
        const stytchClient = useStytchB2BClient();
        const containerEl = useRef(null);
        useLayoutEffect(() => {
            if (!containerEl.current) {
                return;
            }
            mountFn(Object.assign(Object.assign({}, props), { client: stytchClient, element: containerEl.current }));
        }, [stytchClient, props]);
        return React.createElement("div", { ref: containerEl });
    };
    return Component;
};

/**
 * The Admin Portal SSO UI component.
 * This component must be rendered within a {@link StytchB2BProvider}.
 *
 * See the {@link https://stytch.com/docs/b2b/sdks/javascript-sdk online reference}
 */
const AdminPortalSSO = makeAdminPortalComponent(mountAdminPortalSSO, 'AdminPortalSSO');

/**
 * The Admin Portal Organization Settings UI component.
 * This component must be rendered within a {@link StytchB2BProvider}.
 *
 * See the {@link https://stytch.com/docs/b2b/sdks/javascript-sdk online reference}
 */
const AdminPortalOrgSettings = makeAdminPortalComponent(mountAdminPortalOrgSettings, 'AdminPortalOrgSettings');

/**
 * The Admin Portal member management UI component.
 * This component must be rendered within a {@link StytchB2BProvider}.
 *
 * See the {@link https://stytch.com/docs/b2b/sdks/javascript-sdk online reference}
 */
const AdminPortalMemberManagement = makeAdminPortalComponent(mountAdminPortalMemberManagement, 'AdminPortalMemberManagement');

export { AdminPortalMemberManagement, AdminPortalOrgSettings, AdminPortalSSO };
